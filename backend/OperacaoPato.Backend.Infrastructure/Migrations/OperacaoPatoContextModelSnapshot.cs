// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OperacaoPato.Backend.Infrastructure.Data;

#nullable disable

namespace OperacaoPato.Backend.Infrastructure.Migrations
{
    [DbContext(typeof(OperacaoPatoContext))]
    partial class OperacaoPatoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OperacaoPato.Backend.Domain.Entities.DroneOperacional", b =>
                {
                    b.Property<string>("NumeroSerie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("AltitudeAtual")
                        .HasColumnType("float");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaisOrigem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<double>("VelocidadeAtual")
                        .HasColumnType("float");

                    b.HasKey("NumeroSerie");

                    b.ToTable("Drones");

                    b.HasData(
                        new
                        {
                            NumeroSerie = "DRONE-001",
                            AltitudeAtual = 0.0,
                            Fabricante = "DJI Technology",
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Marca = "DJI",
                            PaisOrigem = "China",
                            UltimaAtualizacao = new DateTime(2025, 10, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            VelocidadeAtual = 0.0
                        },
                        new
                        {
                            NumeroSerie = "DRONE-002",
                            AltitudeAtual = 0.0,
                            Fabricante = "Parrot SA",
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Marca = "Parrot",
                            PaisOrigem = "França",
                            UltimaAtualizacao = new DateTime(2025, 10, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            VelocidadeAtual = 0.0
                        },
                        new
                        {
                            NumeroSerie = "DRONE-003",
                            AltitudeAtual = 0.0,
                            Fabricante = "Skydio Inc",
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Marca = "Skydio",
                            PaisOrigem = "Estados Unidos",
                            UltimaAtualizacao = new DateTime(2025, 10, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            VelocidadeAtual = 0.0
                        },
                        new
                        {
                            NumeroSerie = "DRONE-004",
                            AltitudeAtual = 0.0,
                            Fabricante = "Autel Robotics",
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Marca = "Autel",
                            PaisOrigem = "China",
                            UltimaAtualizacao = new DateTime(2025, 10, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            VelocidadeAtual = 0.0
                        },
                        new
                        {
                            NumeroSerie = "DRONE-005",
                            AltitudeAtual = 0.0,
                            Fabricante = "PowerVision Tech",
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Marca = "PowerVision",
                            PaisOrigem = "China",
                            UltimaAtualizacao = new DateTime(2025, 10, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            VelocidadeAtual = 0.0
                        });
                });

            modelBuilder.Entity("OperacaoPato.Backend.Domain.Entities.PatoPrimordial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BatimentosPorMinuto")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataColetaUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DroneNumeroSerie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QuantidadeMutacoes")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Patos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            DataColetaUtc = new DateTime(2025, 10, 23, 12, 0, 0, 0, DateTimeKind.Utc),
                            DroneNumeroSerie = "DRONE-001",
                            QuantidadeMutacoes = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            BatimentosPorMinuto = 30,
                            DataColetaUtc = new DateTime(2025, 10, 24, 12, 0, 0, 0, DateTimeKind.Utc),
                            DroneNumeroSerie = "DRONE-002",
                            QuantidadeMutacoes = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            BatimentosPorMinuto = 15,
                            DataColetaUtc = new DateTime(2025, 10, 25, 12, 0, 0, 0, DateTimeKind.Utc),
                            DroneNumeroSerie = "DRONE-003",
                            QuantidadeMutacoes = 5,
                            Status = 2
                        });
                });

            modelBuilder.Entity("OperacaoPato.Backend.Domain.Entities.DroneOperacional", b =>
                {
                    b.OwnsOne("OperacaoPato.Backend.Domain.ValueObjects.NivelRecurso", "Bateria", b1 =>
                        {
                            b1.Property<string>("DroneOperacionalNumeroSerie")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Unidade")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<double>("Valor")
                                .HasColumnType("float");

                            b1.Property<double>("ValorMaximo")
                                .HasColumnType("float");

                            b1.HasKey("DroneOperacionalNumeroSerie");

                            b1.ToTable("Drones");

                            b1.WithOwner()
                                .HasForeignKey("DroneOperacionalNumeroSerie");

                            b1.HasData(
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-001",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-002",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-003",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-004",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-005",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                });
                        });

                    b.OwnsOne("OperacaoPato.Backend.Domain.ValueObjects.NivelRecurso", "Combustivel", b1 =>
                        {
                            b1.Property<string>("DroneOperacionalNumeroSerie")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Unidade")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<double>("Valor")
                                .HasColumnType("float");

                            b1.Property<double>("ValorMaximo")
                                .HasColumnType("float");

                            b1.HasKey("DroneOperacionalNumeroSerie");

                            b1.ToTable("Drones");

                            b1.WithOwner()
                                .HasForeignKey("DroneOperacionalNumeroSerie");

                            b1.HasData(
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-001",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-002",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-003",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-004",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-005",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                });
                        });

                    b.OwnsOne("OperacaoPato.Backend.Domain.ValueObjects.NivelRecurso", "IntegridadeFisica", b1 =>
                        {
                            b1.Property<string>("DroneOperacionalNumeroSerie")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Unidade")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<double>("Valor")
                                .HasColumnType("float");

                            b1.Property<double>("ValorMaximo")
                                .HasColumnType("float");

                            b1.HasKey("DroneOperacionalNumeroSerie");

                            b1.ToTable("Drones");

                            b1.WithOwner()
                                .HasForeignKey("DroneOperacionalNumeroSerie");

                            b1.HasData(
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-001",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-002",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-003",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-004",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-005",
                                    Unidade = "%",
                                    Valor = 100.0,
                                    ValorMaximo = 100.0
                                });
                        });

                    b.OwnsOne("OperacaoPato.Backend.Domain.ValueObjects.Coordenada", "Posicao", b1 =>
                        {
                            b1.Property<string>("DroneOperacionalNumeroSerie")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("DroneOperacionalNumeroSerie");

                            b1.ToTable("Drones");

                            b1.WithOwner()
                                .HasForeignKey("DroneOperacionalNumeroSerie");

                            b1.HasData(
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-001",
                                    Latitude = 0.0,
                                    Longitude = 0.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-002",
                                    Latitude = 0.0,
                                    Longitude = 0.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-003",
                                    Latitude = 0.0,
                                    Longitude = 0.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-004",
                                    Latitude = 0.0,
                                    Longitude = 0.0
                                },
                                new
                                {
                                    DroneOperacionalNumeroSerie = "DRONE-005",
                                    Latitude = 0.0,
                                    Longitude = 0.0
                                });
                        });

                    b.Navigation("Bateria")
                        .IsRequired();

                    b.Navigation("Combustivel")
                        .IsRequired();

                    b.Navigation("IntegridadeFisica")
                        .IsRequired();

                    b.Navigation("Posicao")
                        .IsRequired();
                });

            modelBuilder.Entity("OperacaoPato.Backend.Domain.Entities.PatoPrimordial", b =>
                {
                    b.OwnsOne("OperacaoPato.Backend.Domain.ValueObjects.Comprimento", "Altura", b1 =>
                        {
                            b1.Property<Guid>("PatoPrimordialId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("UnidadeComprimento")
                                .HasColumnType("int")
                                .HasColumnName("Altura_Unidade");

                            b1.Property<double>("Valor")
                                .HasColumnType("float")
                                .HasColumnName("Altura_Valor");

                            b1.HasKey("PatoPrimordialId");

                            b1.ToTable("Patos");

                            b1.WithOwner()
                                .HasForeignKey("PatoPrimordialId");

                            b1.HasData(
                                new
                                {
                                    PatoPrimordialId = new Guid("11111111-1111-1111-1111-111111111111"),
                                    UnidadeComprimento = 1,
                                    Valor = 50.0
                                },
                                new
                                {
                                    PatoPrimordialId = new Guid("22222222-2222-2222-2222-222222222222"),
                                    UnidadeComprimento = 1,
                                    Valor = 45.0
                                },
                                new
                                {
                                    PatoPrimordialId = new Guid("33333333-3333-3333-3333-333333333333"),
                                    UnidadeComprimento = 1,
                                    Valor = 55.0
                                });
                        });

                    b.OwnsOne("OperacaoPato.Backend.Domain.Entities.SuperPoder", "Poder", b1 =>
                        {
                            b1.Property<Guid>("PatoPrimordialId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Classificacao")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Poder_Classificacao");

                            b1.Property<string>("Descricao")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("Poder_Descricao");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Poder_Nome");

                            b1.HasKey("PatoPrimordialId");

                            b1.ToTable("Patos");

                            b1.WithOwner()
                                .HasForeignKey("PatoPrimordialId");

                            b1.HasData(
                                new
                                {
                                    PatoPrimordialId = new Guid("11111111-1111-1111-1111-111111111111"),
                                    Classificacao = "ofensivo",
                                    Descricao = "Dispara jatos de água pressurizada",
                                    Nome = "Rajada de Água"
                                },
                                new
                                {
                                    PatoPrimordialId = new Guid("22222222-2222-2222-2222-222222222222"),
                                    Classificacao = "defensivo",
                                    Descricao = "Torna-se invisível na água",
                                    Nome = "Camuflagem Aquática"
                                },
                                new
                                {
                                    PatoPrimordialId = new Guid("33333333-3333-3333-3333-333333333333"),
                                    Classificacao = "mobilidade",
                                    Descricao = "Voa em velocidades extremas",
                                    Nome = "Voo Supersônico"
                                });
                        });

                    b.OwnsOne("OperacaoPato.Backend.Domain.ValueObjects.Localizacao", "Localizacao", b1 =>
                        {
                            b1.Property<Guid>("PatoPrimordialId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Localizacao_Cidade");

                            b1.Property<string>("Pais")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Localizacao_Pais");

                            b1.Property<string>("PontoReferencia")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Localizacao_PontoReferencia");

                            b1.HasKey("PatoPrimordialId");

                            b1.ToTable("Patos");

                            b1.WithOwner()
                                .HasForeignKey("PatoPrimordialId");

                            b1.OwnsOne("OperacaoPato.Backend.Domain.ValueObjects.Coordenada", "Coordenada", b2 =>
                                {
                                    b2.Property<Guid>("LocalizacaoPatoPrimordialId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<double>("Latitude")
                                        .HasColumnType("float")
                                        .HasColumnName("Localizacao_Latitude");

                                    b2.Property<double>("Longitude")
                                        .HasColumnType("float")
                                        .HasColumnName("Localizacao_Longitude");

                                    b2.HasKey("LocalizacaoPatoPrimordialId");

                                    b2.ToTable("Patos");

                                    b2.WithOwner()
                                        .HasForeignKey("LocalizacaoPatoPrimordialId");

                                    b2.HasData(
                                        new
                                        {
                                            LocalizacaoPatoPrimordialId = new Guid("11111111-1111-1111-1111-111111111111"),
                                            Latitude = -3.1190000000000002,
                                            Longitude = -60.021700000000003
                                        },
                                        new
                                        {
                                            LocalizacaoPatoPrimordialId = new Guid("22222222-2222-2222-2222-222222222222"),
                                            Latitude = -22.9068,
                                            Longitude = -43.172899999999998
                                        },
                                        new
                                        {
                                            LocalizacaoPatoPrimordialId = new Guid("33333333-3333-3333-3333-333333333333"),
                                            Latitude = -23.5505,
                                            Longitude = -46.633299999999998
                                        });
                                });

                            b1.OwnsOne("OperacaoPato.Backend.Domain.ValueObjects.Comprimento", "Precisao", b2 =>
                                {
                                    b2.Property<Guid>("LocalizacaoPatoPrimordialId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("UnidadeComprimento")
                                        .HasColumnType("int")
                                        .HasColumnName("Localizacao_Precisao_Unidade");

                                    b2.Property<double>("Valor")
                                        .HasColumnType("float")
                                        .HasColumnName("Localizacao_Precisao_Valor");

                                    b2.HasKey("LocalizacaoPatoPrimordialId");

                                    b2.ToTable("Patos");

                                    b2.WithOwner()
                                        .HasForeignKey("LocalizacaoPatoPrimordialId");

                                    b2.HasData(
                                        new
                                        {
                                            LocalizacaoPatoPrimordialId = new Guid("11111111-1111-1111-1111-111111111111"),
                                            UnidadeComprimento = 2,
                                            Valor = 5.0
                                        },
                                        new
                                        {
                                            LocalizacaoPatoPrimordialId = new Guid("22222222-2222-2222-2222-222222222222"),
                                            UnidadeComprimento = 2,
                                            Valor = 10.0
                                        },
                                        new
                                        {
                                            LocalizacaoPatoPrimordialId = new Guid("33333333-3333-3333-3333-333333333333"),
                                            UnidadeComprimento = 2,
                                            Valor = 8.0
                                        });
                                });

                            b1.Navigation("Coordenada")
                                .IsRequired();

                            b1.Navigation("Precisao")
                                .IsRequired();

                            b1.HasData(
                                new
                                {
                                    PatoPrimordialId = new Guid("11111111-1111-1111-1111-111111111111"),
                                    Cidade = "Manaus",
                                    Pais = "Brasil",
                                    PontoReferencia = "Encontro das Águas"
                                },
                                new
                                {
                                    PatoPrimordialId = new Guid("22222222-2222-2222-2222-222222222222"),
                                    Cidade = "Rio de Janeiro",
                                    Pais = "Brasil",
                                    PontoReferencia = "Pão de Açúcar"
                                },
                                new
                                {
                                    PatoPrimordialId = new Guid("33333333-3333-3333-3333-333333333333"),
                                    Cidade = "São Paulo",
                                    Pais = "Brasil",
                                    PontoReferencia = "Parque Ibirapuera"
                                });
                        });

                    b.OwnsOne("OperacaoPato.Backend.Domain.ValueObjects.Massa", "Peso", b1 =>
                        {
                            b1.Property<Guid>("PatoPrimordialId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("UnidadeMassa")
                                .HasColumnType("int")
                                .HasColumnName("Peso_Unidade");

                            b1.Property<double>("Valor")
                                .HasColumnType("float")
                                .HasColumnName("Peso_Valor");

                            b1.HasKey("PatoPrimordialId");

                            b1.ToTable("Patos");

                            b1.WithOwner()
                                .HasForeignKey("PatoPrimordialId");

                            b1.HasData(
                                new
                                {
                                    PatoPrimordialId = new Guid("11111111-1111-1111-1111-111111111111"),
                                    UnidadeMassa = 1,
                                    Valor = 2500.0
                                },
                                new
                                {
                                    PatoPrimordialId = new Guid("22222222-2222-2222-2222-222222222222"),
                                    UnidadeMassa = 1,
                                    Valor = 2200.0
                                },
                                new
                                {
                                    PatoPrimordialId = new Guid("33333333-3333-3333-3333-333333333333"),
                                    UnidadeMassa = 1,
                                    Valor = 3000.0
                                });
                        });

                    b.Navigation("Altura")
                        .IsRequired();

                    b.Navigation("Localizacao")
                        .IsRequired();

                    b.Navigation("Peso")
                        .IsRequired();

                    b.Navigation("Poder")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
